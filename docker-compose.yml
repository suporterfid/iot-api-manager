version: '3.8'

services:
  web:
    build: .
    command: >
      sh -c "python manage.py makemigrations && 
             python manage.py migrate &&
             gunicorn iotapimanager.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - rabbitmq
      - mosquitto
      - logstash
    environment:
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_EMAIL=admin@example.com
      - DJANGO_SUPERUSER_PASSWORD=123456
    networks:
      - app_network

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: django_db
      POSTGRES_USER: django_user
      POSTGRES_PASSWORD: django_password
    ports:
      - "5432:5432"
    networks:
      - app_network

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app_network

  # worker:
  #   build: .
  #   command: celery -A iotapimanager worker -Q default -l info
  #   volumes:
  #     - .:/app
  #   env_file:
  #     - .env
  #   depends_on:
  #     - rabbitmq
  #     - db
  #     - logstash
  #   networks:
  #     - app_network

  # webhook_worker:
  #   build: .
  #   command: celery -A iotapimanager worker -Q webhook_queue -l info
  #   volumes:
  #     - .:/app
  #   env_file:
  #     - .env
  #   depends_on:
  #     - rabbitmq
  #     - db
  #     - logstash
  #   networks:
  #     - app_network

  # webhook_settings_worker:
  #   build: .
  #   command: celery -A iotapimanager worker -Q webhook_settings_queue -l info
  #   volumes:
  #     - .:/app
  #   env_file:
  #     - .env
  #   depends_on:
  #     - rabbitmq
  #     - db
  #     - logstash
  #   networks:
  #     - app_network

  # mqtt_settings_worker:
  #   build: .
  #   command: celery -A iotapimanager worker -Q mqtt_settings_queue -l info
  #   volumes:
  #     - .:/app
  #   env_file:
  #     - .env
  #   depends_on:
  #     - rabbitmq
  #     - db
  #     - logstash
  #   networks:
  #     - app_network

  # celery-beat:
  #     build: .
  #     command: celery -A iotapimanager beat -l info
  #     volumes:
  #       - .:/app
  #     env_file:
  #       - .env
  #     depends_on:
  #       - rabbitmq
  #       - db
  #     networks:
  #       - app_network

  mosquitto:
    image: eclipse-mosquitto:1.6.15
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - mosquitto_data:/mosquitto/data
      - mosquitto_logs:/mosquitto/log
    networks:
      - app_network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - app_network

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.9
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    ports:
      - "5044:5044"
      - "9600:9600"
    depends_on:
      - elasticsearch
    networks:
      - app_network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.9
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  mosquitto_data:
  mosquitto_logs:
  es_data:
